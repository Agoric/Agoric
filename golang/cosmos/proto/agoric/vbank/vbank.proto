syntax = "proto3";
package agoric.vbank;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/Agoric/agoric-sdk/golang/cosmos/x/vbank/types";

message Params {
    option (gogoproto.equal) = true;

    // feeEpochDurationBlocks is the length of a fee epoch, in blocks.
    // A value of zero has the same meaning as a value of one:
    // the full fee buffer should be distributed immediately.
    int64 feeEpochDurationBlocks = 1;
}

message State {
    option (gogoproto.equal) = true;

    // rewardPool is the current balance of rewards in the module account.
    // NOTE: Tracking manually since there is no bank call for getting a
    // module account balance by name.
    repeated cosmos.base.v1beta1.Coin rewardPool = 1
        [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
        ];

    // rewardRate is the amount of reward, if available, to send to the
    // fee collector module on every block.
    repeated cosmos.base.v1beta1.Coin rewardRate = 2
        [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
        
    // lastNonce is a sequence number for communicating with the VM.
    uint64 lastNonce = 3;
}
